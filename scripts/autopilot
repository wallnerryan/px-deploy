kubectl apply -f /assets/monitoring/prometheus-operator.yaml
kubectl wait --for=condition=ready pod -l app=prometheus-operator -n kube-system --timeout 5m

# Install Portworx
k8s_version=$(kubectl version --short | awk -Fv '/Server Version: / {print $3}')
url="https://install.portworx.com/$px_version?kbver=$k8s_version&b=true&c=px-deploy-$cluster&stork=true&st=k8s&lh=true&mon=true"
[ -e /usr/bin/oc ] && url="$url&osft=true"
curl -so /tmp/px.yml $url
kubectl apply -f /tmp/px.yml

while : ; do
  n=$(kubectl exec -n kube-system -it $(kubectl get pods -n kube-system -lname=portworx --field-selector=status.phase=Running | tail -1 | cut -f 1 -d " ") -- /opt/pwx/bin/pxctl status 2>/dev/null | grep "Yes.*Online.*Up" | wc -l)
  [ $n -eq $nodes ] && break
  sleep 1
done
sleep 5

for i in $aut_licenses; do
  while ! kubectl exec -n kube-system -it $(kubectl get pods -n kube-system -lname=portworx --field-selector=status.phase=Running | tail -1 | cut -f 1 -d " ") -- /opt/pwx/bin/pxctl license activate --ep UAT $i; do
    sleep 1
  done
done

curl -L https://github.com/portworx/pxc/releases/download/v0.28.0/pxc-v0.28.0.linux.amd64.tar.gz | tar xvz -C /tmp/.
mv /tmp/pxc/kubectl-pxc /usr/bin/.

# Fix because we don't seem to support the latest prometheus operator!
kubectl apply -f /assets/monitoring/prometheus-cluster.yaml
kubectl apply -f /assets/monitoring/service-monitor.yaml
sleep 10

# Wait for AutoPilot to be available before we apply rules
kubectl wait --for=condition=ready pod -l name=autopilot -n kube-system --timeout 10m
kubectl apply -f /assets/monitoring/prometheus-rules.yaml
kubectl apply -f /assets/postgres/postgres-autopilot-rule.yaml
kubectl apply -f /assets/postgres/postgres.yml
kubectl apply -f /assets/cockroach/cockroach.yml
kubectl apply -f /assets/cockroach/cockroach-autopilot-rule.yml

# chmod scripts to be executable
chmod 775 /assets/cockroach/watch-autopilot.sh
chmod 775 /assets/cockroach/cockroach-loadgen.sh

# Patch grafana for external access
kubectl patch svc grafana -n kube-system -p '{"spec": { "type": "NodePort", "ports": [ { "nodePort": 30112, "port": 3000, "protocol": "TCP", "targetPort": 3000 } ] } }'
