while : ; do
  n=$(kubectl get node  | grep -i ready | awk '{print$1}' | xargs kubectl get node  -o=jsonpath='{range .items[*]}{.metadata.name}{"\t"}{.spec.taints}{"\n"}{end}' | grep -iv noschedule | wc -l 2>&1)
  [ $n -ge 3 ] && break
  sleep 1
  echo Waiting for Kubernetes cluster to come up
done

curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
chmod 700 get_helm.sh
./get_helm.sh
cp /usr/local/bin/helm /usr/bin/helm

helm repo add portworx http://charts.portworx.io/ && helm repo update
helm install px-backup portworx/px-backup --namespace px-backup --create-namespace

until (kubectl get po --namespace px-backup -ljob-name=pxcentral-post-install-hook  -o wide | awk '{print $1, $2, $3}' |grep "Completed"); do echo "Waiting for post install hook";sleep 3; done

until (kubectl get po --namespace px-backup -lapp=px-backup  -o wide | awk '{print $1, $2, $3}' | grep "Running" | grep "1/1"); do echo "Waiting for backup service";sleep 3; done

kubectl patch svc px-backup-ui -n px-backup --type='json' -p '[{"op":"replace","path":"/spec/type","value":"NodePort"}]'

pubIP=$(curl http://169.254.169.254/latest/meta-data/public-ipv4)
backupPort=$(kubectl get svc px-backup-ui -n px-backup -o=jsonpath='{.spec.ports[?(@.port==80)].nodePort}')

cat <<EOF >> /etc/motd
+================================================+
SAVE THE FOLLOWING DETAILS FOR FUTURE REFERENCES
+================================================+
PX-Backup User Interface Access URL : http://$pubIP:$backupPort
PX-Backup orignal admin user name: admin
PX-Backup original admin user password: admin
+================================================+
EOF
